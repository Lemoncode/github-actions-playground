name: CI 

on:
  push:
    branches: [ main ]
    
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: 
          node-version: 16
          cache: 'npm'
          cache-dependency-path: hangman-api/package-lock.json
      - name: build
        working-directory: ./hangman-api
        run: |
          npm ci 
          npm run build --if-present

  test:
    runs-on: ubuntu-latest
    needs: build

    steps: 
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: test
        working-directory: ./hangman-api
        run: |
          npm ci 
          npm test

  test-integration:
    runs-on: ubuntu-latest
    needs: test

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres  
          POSTGRES_PASSWORD: postgres  
          POSTGRES_DB: hangman_db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      # - name: Create database relationships
      - name: Running integration tests 
        working-directory: ./hangman-api
        env:
          DATABASE_PORT: 5432
          DATABASE_HOST: localhost
          DATABASE_NAME: hangman_db
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_POOL_MIN: 2
          DATABASE_POOL_MAX: 10
        run: |
          npm ci 
          npx knex migrate:latest --env development
          npm run test:integration
         
  
